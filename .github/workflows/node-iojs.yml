name: 'Tests: node.js (io.js)'

on: [pull_request, push]

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.set-matrix.outputs.requireds }}
      minors: ${{ steps.set-matrix.outputs.optionals }}
    steps:
      - uses: ljharb/actions/node/matrix@main
        id: set-matrix
        with:
          preset: 'iojs'

  latest:
    needs: [matrix]
    name: 'latest minors'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.latest) }}

    steps:
      - uses: actions/checkout@v2
      - uses: ljharb/actions/node/install@main
        name: 'nvm install ${{ matrix.node-version }} && npm install'
        with:
          node-version: ${{ matrix.node-version }}
          skip-ls-check: true
      - run: npm run tests-only
      - uses: codecov/codecov-action@v1

  minors:
    needs: [matrix, latest]
    name: 'non-latest minors'
    continue-on-error: true
    if: ${{ !github.head_ref || !startsWith(github.head_ref, 'renovate') }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.minors) }}

    steps:
      - uses: actions/checkout@v2
      - uses: ljharb/actions/node/install@main
        name: 'nvm install ${{ matrix.node-version }} && npm install'
        with:
          node-version: ${{ matrix.node-version }}
          skip-ls-check: true
      - run: ./node_modules/.bin/tape 'test/**/*.js'
        if: ${{ matrix.node-version == 'iojs-v3.2' || matrix.node-version == 'iojs-v3.1' || matrix.node-version == 'iojs-v3.0'}}
      - run: npm run tests-only
        if: ${{ matrix.node-version != 'iojs-v3.2' && matrix.node-version != 'iojs-v3.1' && matrix.node-version != 'iojs-v3.0'}}
      - uses: codecov/codecov-action@v1
        if: ${{ matrix.node-version != 'iojs-v3.2' && matrix.node-version != 'iojs-v3.1' && matrix.node-version != 'iojs-v3.0'}}

  node:
    name: 'io.js'
    needs: [latest, minors]
    runs-on: ubuntu-latest
    steps:
      - run: 'echo tests completed'
